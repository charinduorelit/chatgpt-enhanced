{"ast":null,"code":"import { AnimationType } from '../render/utils/types.mjs';\nimport { useDomEvent } from '../events/use-dom-event.mjs';\nimport { useCallback } from 'react';\n\n/**\n *\n * @param props\n * @param ref\n * @internal\n */\nfunction useFocusGesture({\n  whileFocus,\n  visualElement\n}) {\n  const {\n    animationState\n  } = visualElement;\n  const onFocus = useCallback(() => {\n    animationState && animationState.setActive(AnimationType.Focus, true);\n  }, [animationState]);\n  const onBlur = useCallback(() => {\n    animationState && animationState.setActive(AnimationType.Focus, false);\n  }, [animationState]);\n  useDomEvent(visualElement, \"focus\", whileFocus ? onFocus : undefined);\n  useDomEvent(visualElement, \"blur\", whileFocus ? onBlur : undefined);\n}\nexport { useFocusGesture };","map":null,"metadata":{},"sourceType":"module"}